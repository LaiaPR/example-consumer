name: Build

on:
  push:
  workflow_dispatch:

env:
  PACT_BROKER_BASE_URL: https://laiatesting.pactflow.io
  PACT_BROKER_TOKEN: ${{ secrets.PACTFLOW_TOKEN_FOR_CI_CD_WORKSHOP }}
  REACT_APP_API_BASE_URL: http://localhost:8080
  GIT_COMMIT: ${{ github.sha }}
  GIT_REF: ${{ github.ref }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - name: Install
        run: npm i
      - name: Test
        run: make test
      - name: Publish pacts
        run: GIT_BRANCH=${GIT_REF:11} make publish_pacts

  # Runs on branches as well, so we know the status of our PRs
  can-i-deploy-staging:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - run: docker pull pactfoundation/pact-cli:latest
      - name: Can I deploy?
        run: GIT_BRANCH=${GIT_REF:11} ENV_DEPLOY='staging' make can_i_deploy

  # Can deploy any branch to staging
  deploy-staging:
    runs-on: ubuntu-latest
    needs: can-i-deploy-staging
    steps:
      - uses: actions/checkout@v2
      - run: docker pull pactfoundation/pact-cli:latest
      - name: DeployStaging
        run: GIT_BRANCH=${GIT_REF:11} ENV_DEPLOY='staging' make deploy

  can-i-deploy-pro:
    runs-on: ubuntu-latest
    needs: [test, deploy-staging]
    steps:
      - uses: actions/checkout@v2
      - run: docker pull pactfoundation/pact-cli:latest
      - name: Can I deploy?
        run: GIT_BRANCH=${GIT_REF:11} ENV_DEPLOY='production' make can_i_deploy

  # Only deploy from master
  deploy-pro:
    runs-on: ubuntu-latest
    needs: can-i-deploy-pro
    steps:
      - uses: actions/checkout@v2
      - run: docker pull pactfoundation/pact-cli:latest
      - name: DeployPro
        run: GIT_BRANCH=${GIT_REF:11} ENV_DEPLOY='production' make deploy
        if: github.ref == 'refs/heads/master'
